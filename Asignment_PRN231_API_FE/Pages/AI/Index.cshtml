@page
@model Asignment_PRN231_API_FE.Pages.AI.IndexModel
@{
    Layout = "_Layout_AI";
    ViewData["Title"] = "AI";
}

<div class="container-xl px-4">
    <div class="row justify-content-center">
        <div class="col-xl-10 col-lg-11">
            <div class="card my-5 shadow-lg border-0">
                <div class="card-body p-5 text-center">
                    <h2 class="fw-bold text-primary mb-3">Xin chào! Hôm Nay bạn muốn uống gì? Hãy nói cho tôi biết nhé.</h2>
                </div>
                <hr class="my-0" />
                <div class="card-body p-5">

                    <div id="history" class="mt-4 text-dark fw-bold fs-5"></div>
                    <form id="aiForm" class="mx-auto">
                        <div class="input-group">
                            <input type="text" id="question" placeholder="Nhập câu hỏi hoặc nhấn 🎙 để nói..."
                                   class="form-control form-control-lg border-primary shadow-sm"
                                   required>
                            <button type="button" id="voiceBtn" class="btn btn-secondary btn-lg shadow-sm">
                                🎙 Nói
                            </button>
                            <button type="submit" class="btn btn-primary btn-lg shadow-sm">
                                🔍 Hỏi AI
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        let recognition;
        let chatHistory = JSON.parse(sessionStorage.getItem("chatHistory")) || [];

        document.getElementById("voiceBtn").addEventListener("click", function () {
            if (!window.SpeechRecognition && !window.webkitSpeechRecognition) {
                alert("❌ Trình duyệt không hỗ trợ nhận diện giọng nói!");
                return;
            }

            recognition = new (window.SpeechRecognition || window.webkitSpeechRecognition)();
            recognition.lang = "vi-VN"; // Ngôn ngữ tiếng Việt
            recognition.interimResults = false;
            recognition.continuous = false;

            recognition.onstart = function () {
                document.getElementById("voiceBtn").innerText = "🎙 Đang nghe...";
            };

            recognition.onspeechend = function () {
                document.getElementById("voiceBtn").innerText = "🎙 Nói";
                recognition.stop();
            };

            recognition.onresult = function (event) {
                let speechResult = event.results[0][0].transcript;
                document.getElementById("question").value = speechResult; // Hiển thị text vào input
            };

            recognition.start();
        });

        document.getElementById("aiForm").addEventListener("submit", async function (event) {
            event.preventDefault();
            const questionInput = document.getElementById("question");
            const historyContainer = document.getElementById("history");

            const question = questionInput.value.trim();
            if (!question) return;

            // Thêm câu hỏi vào lịch sử hội thoại
            chatHistory.push({ role: "user", text: question });

            // Hiển thị câu hỏi
            const entryContainer = document.createElement("div");
            entryContainer.classList.add("mb-3", "p-2", "border", "rounded", "bg-white");

            const questionElement = document.createElement("p");
            questionElement.classList.add("fw-bold", "text-primary");
            questionElement.innerHTML = `🗣️ <b>Bạn:</b> ${question}`;
            entryContainer.appendChild(questionElement);

            const loadingElement = document.createElement("p");
            loadingElement.classList.add("text-muted");
            loadingElement.innerText = "⏳ Đang xử lý...";
            entryContainer.appendChild(loadingElement);

            historyContainer.appendChild(entryContainer);

            try {
                // Gửi lịch sử hội thoại lên API
                const response = await fetch(`http://coffeeshopscarebe.somee.com/ai/business-advice`, {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify({ conversation: chatHistory })
                });

                const data = await response.json();

                entryContainer.removeChild(loadingElement);

                const answerElement = document.createElement("p");
                answerElement.classList.add("text-dark");
                answerElement.innerHTML = `🤖 <b>AI:</b> ${data.advice || "⚠️ AI không có phản hồi!"}`;
                entryContainer.appendChild(answerElement);

                // Lưu câu trả lời AI vào lịch sử
                chatHistory.push({ role: "ai", text: data.advice });

                // Giữ tối đa 20 lượt hỏi-đáp
                if (chatHistory.length > 40) chatHistory = chatHistory.slice(-40);

                sessionStorage.setItem("chatHistory", JSON.stringify(chatHistory));

            } catch (error) {
                entryContainer.removeChild(loadingElement);
                const errorElement = document.createElement("p");
                errorElement.classList.add("text-danger");
                errorElement.innerText = "❌ Lỗi kết nối API!";
                entryContainer.appendChild(errorElement);
            }

            questionInput.value = "";
            questionInput.focus();
            historyContainer.scrollTop = historyContainer.scrollHeight;
        });
    </script>
}
