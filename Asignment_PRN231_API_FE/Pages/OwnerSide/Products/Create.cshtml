@page
@model Asignment_PRN231_API_FE.Pages.OwnerSide.Products.CreateModel
@{
    Layout = "_LayoutOwnerMangement";
    int index = 1;
    var toast = TempData["Toast"] != null
                ? JsonSerializer.Deserialize<Toast>(TempData["Toast"]!.ToString()!)
                : null;
}
@if (toast != null)
{
    <partial name="_Layout_Toast" model="toast" />
}

<div class="container-xl px-4">
    <div class="row justify-content-center">
        <div class="col-xl-8 col-lg-9">
            <div class="card my-5">
                <div class="card-body p-5 text-center">
                    <div class="h2 fw-bold fw-light mb-3">Create New Product</div>
                </div>
                <hr class="my-0" />
                <div class="card-body p-5">

                    <form method="post" enctype="multipart/form-data">
                        <div class="card-body d-flex flex-column align-items-center">
                            <div class="col-xl-4">
                                <div class="card mb-4 mb-xl-0 ">
                                    <div class="card-header">Product Picture</div>
                                    <div class="card-body text-center">
                                        <!-- Ảnh xem trước -->
                                        <img id="previewImage" class="img-account-profile rounded-circle mb-2"
                                             src="~/avartars/default-avatar.png"
                                             alt="Product Preview" style="width: 150px; height: 150px; object-fit: cover;" />

                                        <div class="small font-italic text-muted mb-4">JPG hoặc PNG không quá 5MB</div>

                                        <!-- Input chọn ảnh -->
                                        <input type="file" id="avatarInput" class="form-control-file" asp-for="Product.Image" accept="image/png, image/jpeg"
                                               onchange="previewAvatar(event)" />

                                    </div>
                                    <span asp-validation-for="Product.Image" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="ProductName">Tên sản phẩm</label>
                            <input type="text" asp-for="Product.ProductName" class="form-control" required />
                            <span asp-validation-for="Product.ProductName" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label for="Description">Mô tả</label>
                            <textarea asp-for="Product.Description" class="form-control"></textarea>
                            <span asp-validation-for="Product.Description" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label for="Price">Giá</label>
                            <input type="number" asp-for="Product.Price" class="form-control" required />
                            <span asp-validation-for="Product.Price" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label for="CategoryId">Danh mục</label>
                            <select asp-for="Product.CategoryId" asp-items="@(new SelectList(Model.Categories, "CategoryId", "CategoryName"))" class="form-control">
                                <option value="">-- Chọn danh mục --</option>
                            </select>
                            <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
                        </div>


                        <div class="form-group">
                            <label for="Size">Kích thước</label>
                            <input type="number" asp-for="Product.Size" class="form-control" required />
                            <span asp-validation-for="Product.Size" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label for="Quantity">Số lượng</label>
                            <input type="number" asp-for="Product.Quantity" class="form-control" required />
                            <span asp-validation-for="Product.Quantity" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label for="Discount">Giảm giá (%)</label>
                            <input type="number" asp-for="Product.Discount" class="form-control" />
                            <span asp-validation-for="Product.Discount" class="text-danger"></span>
                        </div>

                        <div class="form-group">
                            <label for="IsActive">Trạng thái</label>
                            <select asp-for="Product.IsActive" class="form-control">
                                <option value="1">Hoạt động</option>
                                <option value="0">Ngừng bán</option>
                            </select>
                            <span asp-validation-for="Product.IsActive" class="text-danger"></span>
                        </div>

                        

                        <!-- Recipe Details -->
                        <div class="form-group mt-4">
                            <label class="fw-bold">Danh sách nguyên liệu</label>
                            <div class="row">
                                <div class="col-md-5">
                                    <select id="IngredientSelect" class="form-control">
                                        <option value="">-- Chọn nguyên liệu --</option>
                                        @foreach (var ingredient in Model.Ingredients)
                                        {
                                            <option value="@ingredient.IngredientId">@ingredient.IngredientName</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-3">
                                    <input type="number" id="RecipeQuantity" class="form-control" placeholder="Số lượng" />
                                </div>
                                <div class="col-md-4">
                                    <button type="button" class="btn btn-success" onclick="addRecipeDetail()">Thêm nguyên liệu</button>
                                </div>
                            </div>
                        </div>

                        <!-- Recipe Details Table -->
                        <div class="mt-3">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Nguyên liệu</th>
                                        <th>Số lượng</th>
                                        <th>Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody id="recipeDetailsTable">
                                    <!-- Dữ liệu sẽ được thêm ở đây -->
                                </tbody>
                            </table>
                        </div>

                        <!-- Hidden fields để lưu danh sách RecipeDetails -->
                        <div id="hiddenRecipeDetails"></div>

                        <button type="submit" class="btn btn-primary mt-3">Thêm sản phẩm</button>
                        <a asp-page="Index" class="btn btn-secondary mt-3">Hủy</a>
                    </form>


                </div>

            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        function previewAvatar(event) {
            var file = event.target.files[0];
            if (file) {
                var reader = new FileReader();
                reader.onload = function (e) {
                    document.getElementById('previewImage').src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        }
                let recipeDetails = [];

        function addRecipeDetail() {
            let ingredientSelect = document.getElementById("IngredientSelect");
            let ingredientId = ingredientSelect.value;
            let ingredientName = ingredientSelect.options[ingredientSelect.selectedIndex].text;
            let quantity = document.getElementById("RecipeQuantity").value;

            if (!ingredientId || !quantity) {
                alert("Vui lòng chọn nguyên liệu và nhập số lượng!");
                return;
            }

            // Thêm vào danh sách
            let newRecipeDetail = { ingredientId, quantity };
            recipeDetails.push(newRecipeDetail);

            // Cập nhật bảng hiển thị
            let tableBody = document.getElementById("recipeDetailsTable");
            let newRow = document.createElement("tr");
            newRow.innerHTML = `
                <td>${ingredientName}</td>
                <td>${quantity}</td>
                <td><button type="button" class="btn btn-danger btn-sm" onclick="removeRecipeDetail(${recipeDetails.length - 1}, this)">Xóa</button></td>
            `;
            tableBody.appendChild(newRow);

            // Cập nhật hidden input để gửi lên server
            updateHiddenFields();

            // Xóa dữ liệu đã nhập
            document.getElementById("IngredientSelect").value = "";
            document.getElementById("RecipeQuantity").value = "";
        }

        function removeRecipeDetail(index, button) {
            // Xóa khỏi danh sách
            recipeDetails.splice(index, 1);

            // Xóa dòng trong bảng
            let row = button.parentNode.parentNode;
            row.parentNode.removeChild(row);

            // Cập nhật hidden input
            updateHiddenFields();
        }

        function updateHiddenFields() {
            let hiddenDiv = document.getElementById("hiddenRecipeDetails");
            hiddenDiv.innerHTML = "";
            recipeDetails.forEach((item, index) => {
                hiddenDiv.innerHTML += `
                    <input type="hidden" name="RecipeDetails[${index}].IngredientId" value="${item.ingredientId}" />
                    <input type="hidden" name="RecipeDetails[${index}].Quantity" value="${item.quantity}" />
                `;
            });
        }
    </script>

}